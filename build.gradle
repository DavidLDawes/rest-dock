buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:1.3.5.RELEASE')
// tag::build[]
        classpath('com.bmuschko:gradle-docker-plugin:3.0.1')
// end::build[]
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
// tag::plugin[]
apply plugin: 'com.bmuschko.docker-remote-api'
// end::plugin[]

// This is used as the docker image prefix (org)
group = "virtualsoundnw"

docker {
    url = 'http://localhost:2375'

    registryCredentials {
        url = 'https://index.docker.io/v1'
        username = 'virtualsoundnw'
        password = 'rebozo78namyL!docker'
        email = 'davidlyman.dawes@yahoo.com'
    }
}
jar {
    baseName = 'spring-boot-docker'
    version =  '0.1.0'
}

// tag::task[]
task buildDockerImage(type: DockerBuildImage, dependsOn: build) {
    inputDir = file('src/main/docker')
    tag = 'virtualsoundnw/spring-boot-docker:latest'
}

task createContainer(type: DockerCreateContainer, dependsOn: buildDockerImage) {
    dependsOn buildDockerImage
    targetImageId { buildDockerImage.getImageId() }
    portBindings = ['8080:8080']
}

task startContainer(type: DockerStartContainer, dependsOn: createContainer) {
    dependsOn createContainer
    targetContainerId { createContainer.getContainerId() }
}

task stopContainer(type: DockerStopContainer) {
    targetContainerId { createContainer.getContainerId() }
}

// end::task[]

repositories {
    mavenCentral()
}

sourceCompatibility = 1.6
targetCompatibility = 1.6

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web") 
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
